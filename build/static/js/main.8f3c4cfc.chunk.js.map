{"version":3,"sources":["redux/contacts/contactsActions.js","routes.js","service/themeConfig.js","service/PrivateRoute.js","service/PublicRoute.js","redux/theme/themeActions.js","components/logo/Logo.js","components/navigation/Navigation.js","components/userMenu/UserMenu.js","components/appBar/AppBar.js","components/App.js","components/AppContainer.js","redux/contacts/contactsReducer.js","redux/theme/themeReducer.js","redux/store.js","index.js","components/navigation/Navigation.module.css","redux/contacts/contactsSelectors.js","redux/auth/authOperations.js","redux/auth/authActions.js","redux/auth/authSelectors.js","redux/auth/authReducer.js","components/logo/Logo.module.css"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","path","label","exact","component","lazy","private","restricted","themeConfig","light","headerBg","fontColor","bodybg","dark","PrivateRoute","Component","routeProps","isAuthenticated","useSelector","state","auth","token","render","props","to","changeTheme","logoStyles","appear","styles","appearActive","Logo","CSSTransition","in","timeout","classNames","unmountOnExit","className","logo","Navigation","nav","NavigationLink","navLink","activeClassName","NavigationLinkActive","container","display","alignItems","avatar","marginRight","name","fontWight","connect","authSelectors","getUserName","onLogout","authOperations","logOut","style","Button","variant","color","type","onClick","justifyContent","borderBottom","marginBottom","backgroundColor","theme","contactsSelectors","getTheme","dicpatch","themeActions","themeState","App","isloadingContacts","background","fallback","routes","map","route","key","PublicRoute","AppContainer","this","onGetCurrentUser","getLoading","getCurrentUser","items","createReducer","contactsActions","_","action","payload","filter","contact","id","loading","combineReducers","themeReducer","authPersistConfig","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","themeColor","persistReducer","authReducer","middleware","thunk","persistor","persistStore","ReactDOM","document","getElementById","module","exports","getContacts","getFilter","getFillteredContacts","createSelector","toLowerCase","includes","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","authActions","registerRequest","post","then","response","data","registerSuccess","catch","error","registerError","logoutRequest","logoutSuccess","logoutError","logIn","logInRequest","logInSuccess","logInError","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","user","initialUserState","email"],"mappings":"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","file":"static/js/main.8f3c4cfc.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n// import { v4 as uuid } from 'uuid';\n\nconst fetchContactRequest = createAction('contacts/fetchRequest');\nconst fetchContactSuccess = createAction('contacts/fetchSuccess');\nconst fetchContactError = createAction('contacts/fetchError');\n\nconst addContactRequest = createAction('contacts/addRequest');\nconst addContactSuccess = createAction('contacts/addSuccess');\nconst addContactError = createAction('contacts/addError');\n\nconst removeContactRequest = createAction('contacts/removeRequest');\nconst removeContactSuccess = createAction('contacts/removeSuccess');\nconst removeContactError = createAction('contacts/removeError');\n\n// const addContact = createAction('contacts/add', (name, number) => ({\n//   payload: {\n//     contact: { id: uuid(), name, number },\n//   },\n// }));\n\n// const removeContact = createAction('contacts/remove');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n  // addContact,\n  // removeContact,\n  changeFilter,\n};\n","import { lazy } from 'react';\n\nexport default [\n  {\n    path: '/login',\n    label: 'Login',\n    exact: true,\n    component: lazy(() => import('./components/logInPage/LogInPage')),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: '/register',\n    label: 'Register',\n    exact: true,\n    component: lazy(() => import('./components/registerPage/registerPage')),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: '/contacts',\n    label: 'Contacts',\n    exact: true,\n    component: lazy(() => import('./components/contacts/Contacts')),\n    private: true,\n    restricted: false,\n  },\n];\n","const themeConfig = {\n  light: {\n    headerBg: '#F7B30C',\n    fontColor: 'black',\n    bodybg: 'white',\n  },\n  dark: {\n    headerBg: '#3c3c3c',\n    fontColor: 'white',\n    bodybg: 'rgb(100, 100, 100)',\n  },\n};\n\nexport default themeConfig;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, ...routeProps }) => {\n  const isAuthenticated = useSelector(state => state.auth.token);\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, restricted, ...routeProps }) => {\n  const isAuthenticated = useSelector(state => state.auth.token);\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isAuthenticated && restricted ? (\n          <Redirect to=\"/contacts\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst changeTheme = createAction('theme/changeTheme');\n\nexport default { changeTheme };\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './Logo.module.css';\n\nconst logoStyles = {\n  appear: styles.appear,\n  appearActive: styles.appearActive,\n};\n\nconst Logo = () => {\n  return (\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={500}\n      classNames={logoStyles}\n      unmountOnExit\n    >\n      <h1 className={styles.logo}>Phonebook</h1>\n    </CSSTransition>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './Navigation.module.css';\n\nconst Navigation = () => {\n  return (\n    <nav className={styles.nav}>\n      <NavLink\n        exact\n        to=\"/login\"\n        className={styles.NavigationLink + ' ' + styles.navLink}\n        activeClassName={styles.NavigationLinkActive}\n      >\n        LogIn\n      </NavLink>\n      <br />\n      <NavLink\n        to=\"/register\"\n        className={styles.NavigationLink + ' ' + styles.navLink}\n        activeClassName={styles.NavigationLinkActive}\n      >\n        Register\n      </NavLink>\n    </nav>\n  );\n};\n\nexport default Navigation;\n\n// import React from 'react';\n// import { NavLink } from 'react-router-dom';\n// import styles from './Navigation.module.css';\n// import routes from '../../routes';\n\n// const Navigation = () => {\n//   return (\n//     <div className={styles.nav}>\n//       <NavLink\n//         exact\n//         to={routes.logIn}\n//         className={styles.NavigationLink + ' ' + styles.navLink}\n//         activeClassName={styles.NavigationLinkActive}\n//       >\n//         LogIn\n//       </NavLink>\n//       <br />\n//       <NavLink\n//         to={routes.register}\n//         className={styles.NavigationLink + ' ' + styles.navLink}\n//         activeClassName={styles.NavigationLinkActive}\n//       >\n//         Register\n//       </NavLink>\n//       <NavLink\n//         to={routes.contacts}\n//         className={styles.NavigationLink + ' ' + styles.navLink}\n//         activeClassName={styles.NavigationLinkActive}\n//       >\n//         Contacts\n//       </NavLink>\n//     </div>\n//   );\n// };\n\n// export default Navigation;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport { Button } from '@material-ui/core';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWight: 700,\n    marginRight: 12,\n  },\n};\n\nconst UserMenu = ({ name, onLogout }) => (\n  <div style={styles.container}>\n    <span style={styles.name}>Welcome, {name}</span>\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      type=\"button\"\n      onClick={onLogout}\n    >\n      Logout\n    </Button>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  name: authSelectors.getUserName(state),\n  avatar: null,\n});\n\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\n  UserMenu,\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport authSelectors from '../../redux/auth/authSelectors';\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\nimport themeActions from '../../redux/theme/themeActions';\n\nimport Logo from '../logo/Logo';\nimport Navigation from '../navigation/Navigation';\nimport UserMenu from '../userMenu/UserMenu';\n\nimport { Button } from '@material-ui/core';\n\nconst styles = {\n  light: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n    marginBottom: '5px',\n  },\n  dark: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n    backgroundColor: 'rgb(50, 50, 50)',\n    color: 'white',\n    marginBottom: '5px',\n  },\n};\n\nconst AppBar = ({ isAuthenticated, changeTheme, theme }) => {\n  let themeState = 'light';\n  theme ? (themeState = 'light') : (themeState = 'dark');\n\n  return (\n    <header style={styles[themeState]}>\n      <Logo />\n      <Button variant=\"contained\" color=\"primary\" onClick={changeTheme}>\n        Change theme\n      </Button>\n\n      {isAuthenticated ? <UserMenu /> : <Navigation />}\n    </header>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n  theme: contactsSelectors.getTheme(state),\n});\n\nconst mapDispatchToProps = dicpatch => ({\n  changeTheme: () => dicpatch(themeActions.changeTheme()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppBar);\n","import React, { Suspense } from 'react';\nimport { BrowserRouter, Switch, Redirect } from 'react-router-dom';\nimport routes from '../routes';\n\nimport themeConfig from '../service/themeConfig';\nimport PrivateRoute from '../service/PrivateRoute';\nimport PublicRoute from '../service/PublicRoute';\nimport AppBar from './appBar/AppBar';\n\nconst App = ({ theme, isloadingContacts }) => {\n  let themeState = 'light';\n  theme ? (themeState = 'light') : (themeState = 'dark');\n\n  return (\n    <BrowserRouter>\n      <div\n        style={{\n          color: themeConfig[themeState].fontColor,\n          background: themeConfig[themeState].bodybg,\n        }}\n      >\n        <AppBar />\n        {/* {isloadingContacts && <h2>Loading ...</h2>} */}\n        <Suspense fallback={<h1>Loading...</h1>}>\n          <Switch>\n            {routes.map(route => {\n              return route.private ? (\n                <PrivateRoute key={route.label} {...route} />\n              ) : (\n                <PublicRoute\n                  key={route.label}\n                  {...route}\n                  restricted={route.restricted}\n                />\n              );\n            })}\n            <Redirect to=\"/login\" />\n          </Switch>\n        </Suspense>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\nimport { authOperations } from '../redux/auth';\nimport App from './App';\n\nclass AppContainer extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return <App {...this.props} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    theme: contactsSelectors.getTheme(state),\n    isloadingContacts: contactsSelectors.getLoading(state),\n  };\n};\n\nconst mapDispatchToProps = dicpatch => ({\n  onGetCurrentUser: () => dicpatch(authOperations.getCurrentUser()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport contactsActions from './contactsActions';\n\nconst onAddContact = (state, action) => {\n  return [...state, action.payload];\n};\n\nconst onRemoveContact = (state, action) =>\n  state.filter(contact => contact.id !== action.payload);\n\nconst onChangeFilter = (_, action) => action.payload;\n\nconst items = createReducer([], {\n  [contactsActions.fetchContactSuccess]: (_, action) => action.payload,\n  [contactsActions.addContactSuccess]: onAddContact,\n  [contactsActions.removeContactSuccess]: onRemoveContact,\n});\n\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: onChangeFilter,\n});\n\nconst loading = createReducer(false, {\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.fetchContactRequest]: () => true,\n  [contactsActions.fetchContactSuccess]: () => false,\n  [contactsActions.fetchContactError]: () => false,\n  [contactsActions.removeContactRequest]: () => true,\n  [contactsActions.removeContactSuccess]: () => false,\n  [contactsActions.removeContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  loading,\n  filter,\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport themeActions from './themeActions';\n\nconst themeReducer = createReducer(true, {\n  [themeActions.changeTheme]: state => !state,\n});\n\nexport default themeReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport contactsReducer from './contacts/contactsReducer';\nimport themeReducer from './theme/themeReducer';\nimport authReducer from './auth/authReducer';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    themeColor: themeReducer,\n    // auth: authReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware: [thunk],\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './components/AppContainer';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__3CXyF\",\"NavigationLink\":\"Navigation_NavigationLink__1iMNT\",\"navLink\":\"Navigation_navLink__3NBMf\",\"NavigationLinkActive\":\"Navigation_NavigationLinkActive__2WXdS\",\"AddInfoLink\":\"Navigation_AddInfoLink__1ijOM\"};","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.items;\nconst getTheme = state => state.themeColor;\nconst getLoading = state => state.contacts.loading;\nconst getFilter = state => state.contacts.filter;\n\nconst getFillteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n\nexport default {\n  getContacts,\n  getTheme,\n  getLoading,\n  getFilter,\n  getFillteredContacts,\n};\n","import axios from 'axios';\nimport authActions from './authActions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => dispatch => {\n  dispatch(authActions.registerRequest());\n\n  axios\n    .post('/users/signup', credentials)\n    .then(response => {\n      token.set(response.data.token);\n      dispatch(authActions.registerSuccess(response.data));\n    })\n    .catch(error => dispatch(authActions.registerError(error)));\n};\n\nconst logIn = credentials => dispatch => {\n  dispatch(authActions.logInRequest());\n\n  axios\n    .post('/users/logIn', credentials)\n    .then(response => {\n      token.set(response.data.token);\n      dispatch(authActions.logInSuccess(response.data));\n    })\n    .catch(error => dispatch(authActions.logInError(error)));\n};\n\nconst getCurrentUser = () => (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  axios\n    .get('/users/current')\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\n    .catch(error => authActions.getCurrentUserError(error));\n};\n\nconst logOut = () => dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  axios\n    .post('/users/logout')\n    .then(() => {\n      token.unset();\n      dispatch(authActions.logoutSuccess());\n    })\n    .catch(error => dispatch(authActions.logoutError(error)));\n};\n\nexport default { register, logOut, logIn, getCurrentUser };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst logInRequest = createAction('auth/logInRequest');\nconst logInSuccess = createAction('auth/logInSuccess');\nconst logInError = createAction('auth/logInError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logInRequest,\n  logInSuccess,\n  logInError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","const isAuthenticated = state => state.auth.token;\n\nconst getUserName = state => state.auth.user.name;\n\nexport default { isAuthenticated, getUserName };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './authActions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.logInSuccess]: (_, { payload }) => payload.user,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n  [authActions.logoutSuccess]: () => initialUserState,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.logInSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.logInError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__zUSEk\",\"appear\":\"Logo_appear__2Tst9\",\"appearActive\":\"Logo_appearActive__lsRx9\"};"],"sourceRoot":""}